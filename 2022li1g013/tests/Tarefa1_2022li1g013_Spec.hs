module Tarefa1_2022li1g013_Spec where

import LI12223
import Tarefa1_2022li1g013
import Test.HUnit

testsT1 :: Test
testsT1 = test ["mapaValido" ~: True ~=? mapaValido (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]), 
                "mapaValido" ~: False ~=? mapaValido (Mapa 5 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "obstaculosinvalidos" ~: True ~=? obstaculosinvalidos (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "obstaculosinvalidos" ~: False ~=? obstaculosinvalidos (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Tronco,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Arvore,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "rioscontiguos" ~: True ~=? rioscontiguos (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Rio (-2) , [Nenhum,Tronco,Nenhum,Tronco]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "rioscontiguos" ~: False ~=? rioscontiguos (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Rio 1 , [Nenhum,Tronco,Nenhum,Tronco]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "larguraobstaculos" ~: True ~=? larguraobstaculos (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "larguraobstaculos" ~: False ~=? larguraobstaculos (Mapa 7 [(Rio 3, [Nenhum,Tronco,Tronco,Tronco,Tronco,Tronco,Tronco]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro,Nenhum,Nenhum,Nenhum]), (Estrada (-1), [Nenhum,Carro,Carro,Carro,Nenhum,Nenhum,Nenhum]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum,Nenhum,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore,Nenhum,Nenhum,Nenhum]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum,Nenhum,Nenhum,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum,Nenhum,Nenhum,Nenhum])]),
                "minobstaculos" ~: True ~=? minobstaculos (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "minobstaculos" ~: False ~=? minobstaculos (Mapa 4 [(Rio 3, [Tronco,Tronco,Tronco,Tronco]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "largmapa" ~: True ~=? largmapa (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "largmapa" ~: False ~=? largmapa (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum,Tronco]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "maxriosestradas" ~: True ~=? maxriosestradas (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 4, [Nenhum,Carro,Nenhum,Carro]), (Estrada (-1), [Nenhum,Carro,Carro,Carro]), (Estrada 2, [Nenhum,Carro,Nenhum,Nenhum]), (Relva, [Arvore,Nenhum,Arvore,Arvore]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "maxriosestradas" ~: False ~=? maxriosestradas (Mapa 4 [(Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Rio (-2), [Tronco,Tronco,Tronco,Nenhum]), (Rio 1, [Nenhum,Tronco,Tronco,Tronco]), (Rio (-2), [Nenhum,Tronco,Nenhum,Nenhum]), (Rio 3, [Nenhum,Tronco,Tronco,Nenhum]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2),[Carro,Nenhum,Nenhum,Nenhum])]),
                "maxriosestradas" ~: False ~=? maxriosestradas (Mapa 4 [(Estrada 3, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2), [Nenhum,Carro,Carro,Nenhum]), (Estrada 1, [Nenhum,Carro,Carro,Nenhum]), (Estrada (-2), [Nenhum,Carro,Carro,Nenhum]), (Estrada 3, [Nenhum,Carro,Carro,Nenhum]), (Estrada 5, [Nenhum,Carro,Carro,Nenhum]), (Rio (-2),[Tronco,Nenhum,Nenhum,Nenhum])]),
                "maxriosestradas" ~: False ~=? maxriosestradas (Mapa 4 [(Relva, [Nenhum,Arvore,Arvore,Nenhum]), (Relva, [Nenhum,Arvore,Arvore,Nenhum]), (Relva, [Nenhum,Arvore,Arvore,Nenhum]), (Relva, [Nenhum,Arvore,Arvore,Nenhum]), (Relva, [Nenhum,Arvore,Arvore,Nenhum]), (Relva, [Nenhum,Arvore,Arvore,Nenhum]), (Rio (-2),[Tronco,Nenhum,Nenhum,Nenhum])])        
               ]
